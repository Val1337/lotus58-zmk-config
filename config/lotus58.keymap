#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    chosen {
        zmk,display = &oled;
    };

    // Display configuration
    custom_status: custom_status {
        compatible = "zmk,widget-layer-status";
        label = "CUSTOM_STATUS";
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "BASE";
            bindings = <
                &kp ESC    &as LSHFT N1 &as LSHFT N2 &as LSHFT N3 &as LSHFT N4 &as LSHFT N5                               &as LSHFT N6 &as LSHFT N7 &as LSHFT N8 &as LSHFT N9 &as LSHFT N0 &as LSHFT MINUS
                &kp TAB    &as LSHFT Q  &as LSHFT W  &as LSHFT E  &as LSHFT R  &as LSHFT T                                &as LSHFT Y  &as LSHFT U  &as LSHFT I  &as LSHFT O  &as LSHFT P  &as LSHFT LBKT
                &kp CAPS   &as LSHFT A  &as LSHFT S  &as LSHFT D  &as LSHFT F  &as LSHFT G  &kp C_PP         &kp C_PP     &as LSHFT H  &as LSHFT J  &as LSHFT K  &as LSHFT L  &as LSHFT SEMI &as LSHFT SQT
                &mt LCTRL LEFT &as LSHFT Z &as LSHFT X &as LSHFT C &as LSHFT V &as LSHFT B  &kp DOWN         &kp UP       &as LSHFT N  &as LSHFT M  &as LSHFT COMMA &as LSHFT DOT &as LSHFT FSLH &mt RCTRL RIGHT
                                            &kp LALT  &mo 1    &kp LGUI &mt LSHFT SPACE  &mt RSHFT RET &mt RGUI BSPC &mo 2    &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_layer {
            label = "LOWER";
            bindings = <
                &trans     &trans   &trans   &trans    &trans    &trans                              &trans   &trans   &trans    &trans   &trans    &trans
                &trans     &none    &none    &none     &kp LPAR  &kp RPAR                           &kp HASH &kp C_PREV &kp C_VOL_DN &kp C_VOL_UP &kp C_NEXT &none
                &trans     &none    &none    &none     &kp LBKT  &kp RBKT  &trans          &trans   &kp AMPS &kp LEFT &kp DOWN  &kp UP   &kp RIGHT &none 
                &trans     &none    &kp STAR &kp GRAVE &kp NUHS  &kp EQUAL &trans          &trans   &kp DLLR &none    &none     &none    &none     &trans
                                            &trans    &trans    &trans    &trans          &trans   &trans   &trans   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        raise_layer {
            label = "RAISE";
            bindings = <
                &trans     &kp F1   &kp F2   &kp F3    &kp F4    &kp F5                             &kp F6   &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp F10   &trans
                &trans     &trans   &trans   &trans    &trans    &trans                             &trans   &kp KP_N4 &kp KP_N5 &kp KP_N6 &trans    &trans
                &trans     &trans   &trans   &trans    &trans    &trans   &trans          &trans    &trans   &kp KP_N1 &kp KP_N2 &kp KP_N3 &trans    &trans
                &trans     &trans   &trans   &trans    &trans    &trans   &trans          &trans    &trans   &kp KP_N0 &kp KP_DOT &kp COLON &kp MINUS &trans
                                            &trans    &trans    &trans   &trans          &trans    &trans   &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };
};

&oled {
    status = "okay";

    display_widgets {
        compatible = "zmk,display-widgets";
        
        layer_status_widget: layer_status_widget {
            compatible = "zmk,widget-layer-status";
            position = <0 0>;
        };

        keyboard_status: keyboard_status {
            compatible = "zmk,widget-battery-status";
            position = <0 16>;
        };

        output_status: output_status {
            compatible = "zmk,widget-output-status";
            position = <0 32>;
        };
    };
};